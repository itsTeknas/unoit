#import <Foundation/Foundation.h>
#import "SWGDataVersion.h"
#import "SWGInlineResponse200.h"
#import "SWGParams.h"
#import "SWGPost.h"
#import "SWGPost1.h"
#import "SWGPosts.h"
#import "SWGApi.h"

/**
* UNO-IT
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 0.0.1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGUserApiApi: NSObject <SWGApi>

extern NSString* kSWGUserApiApiErrorDomain;
extern NSInteger kSWGUserApiApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// cast a vote in a poll
/// 
///
/// @param postId Post ID
/// @param candidate Candidate ID
/// 
///  code:200 message:"Vote Caster"
///
/// @return 
-(NSURLSessionTask*) appUserApiV1CastVotePostIdCandidatePostWithPostId: (NSNumber*) postId
    candidate: (NSString*) candidate
    completionHandler: (void (^)(NSError* error)) handler;


/// get a list of all posts
/// 
///
/// 
///  code:200 message:"a list of posts"
///
/// @return SWGPosts*
-(NSURLSessionTask*) appUserApiV1CollectionresponsePostGetWithCompletionHandler: 
    (void (^)(SWGPosts* output, NSError* error)) handler;


/// get the current users posts
/// 
///
/// 
///  code:200 message:"TODO: Complete this"
///
/// @return 
-(NSURLSessionTask*) appUserApiV1CollectionresponsePostPostWithCompletionHandler: 
    (void (^)(NSError* error)) handler;


/// get the timestamp whrn the psots were last updated
/// 
///
/// 
///  code:200 message:"data version"
///
/// @return SWGDataVersion*
-(NSURLSessionTask*) appUserApiV1DataversionGetWithCompletionHandler: 
    (void (^)(SWGDataVersion* output, NSError* error)) handler;


/// Get is User Admin
/// 
///
/// 
///  code:200 message:"if email is present, user is admin"
///
/// @return SWGInlineResponse200*
-(NSURLSessionTask*) appUserApiV1IsUserAdminGetWithCompletionHandler: 
    (void (^)(SWGInlineResponse200* output, NSError* error)) handler;


/// get a list of all posts
/// 
///
/// @param post 
/// 
///  code:200 message:"Done"
///
/// @return 
-(NSURLSessionTask*) appUserApiV1NewPostPostWithPost: (SWGPost1*) post
    completionHandler: (void (^)(NSError* error)) handler;


/// Notify Friend for Chat
/// 
///
/// @param chatUid 
/// @param myUid 
/// @param receipantEmail 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) appUserApiV1NotifyFriendForChatChatUidMyUidReceipantEmailPostWithChatUid: (NSString*) chatUid
    myUid: (NSString*) myUid
    receipantEmail: (NSString*) receipantEmail
    completionHandler: (void (^)(NSError* error)) handler;


/// Notify Friend for Chat
/// 
///
/// @param chatUid 
/// @param myUid 
/// @param receipantEmail 
/// @param message 
/// 
///  code:200 message:"OK"
///
/// @return 
-(NSURLSessionTask*) appUserApiV1NotifyFriendForNewMessageChatUidMyUidReceipantEmailMessagePostWithChatUid: (NSString*) chatUid
    myUid: (NSString*) myUid
    receipantEmail: (NSString*) receipantEmail
    message: (NSString*) message
    completionHandler: (void (^)(NSError* error)) handler;


/// get a single post
/// 
///
/// @param postId Post ID
/// 
///  code:200 message:"post"
///
/// @return SWGPost*
-(NSURLSessionTask*) appUserApiV1PostPostIdGetWithPostId: (NSNumber*) postId
    completionHandler: (void (^)(SWGPost* output, NSError* error)) handler;


/// register
/// 
///
/// @param params 
/// 
///  code:200 message:"Registered"
///
/// @return 
-(NSURLSessionTask*) appUserApiV1RegisterPutWithParams: (SWGParams*) params
    completionHandler: (void (^)(NSError* error)) handler;


/// Upload images
/// the path is /UploadServlet ie. its not related to any other basepath
///
/// @param file 
/// 
///  code:200 message:"uploaded"
///
/// @return 
-(NSURLSessionTask*) uploadServletPostWithFile: (NSURL*) file
    completionHandler: (void (^)(NSError* error)) handler;



@end
